// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dalSQL;

#nullable disable

namespace dalSQL.Migrations
{
    [DbContext(typeof(SQLContexto))]
    partial class SQLContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Modelo.Categoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("NOME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Modelo.Estoque", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("LOCAL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PRODUTOID")
                        .HasColumnType("int");

                    b.Property<int>("QTDE")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PRODUTOID")
                        .IsUnique();

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("Modelo.Produto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("COR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Modelo.ProdutoCategoria", b =>
                {
                    b.Property<int>("PRODUTO_ID")
                        .HasColumnType("int");

                    b.Property<int>("CATEGORIA_ID")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoID")
                        .HasColumnType("int");

                    b.HasKey("PRODUTO_ID", "CATEGORIA_ID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("ProdutoID");

                    b.ToTable("CategoryProduct");
                });

            modelBuilder.Entity("Modelo.Estoque", b =>
                {
                    b.HasOne("Modelo.Produto", "Produto")
                        .WithOne("Mass")
                        .HasForeignKey("Modelo.Estoque", "PRODUTOID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Modelo.ProdutoCategoria", b =>
                {
                    b.HasOne("Modelo.Categoria", "Categoria")
                        .WithMany("CatProduto")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Produto", "Produto")
                        .WithMany("PrdCategoria")
                        .HasForeignKey("ProdutoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Modelo.Categoria", b =>
                {
                    b.Navigation("CatProduto");
                });

            modelBuilder.Entity("Modelo.Produto", b =>
                {
                    b.Navigation("Mass");

                    b.Navigation("PrdCategoria");
                });
#pragma warning restore 612, 618
        }
    }
}
